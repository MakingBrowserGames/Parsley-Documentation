#sc2 overview_migrate_24 Migrating from Version 2.3 to 2.4 #sc2

#par Like the 2.2 and 2.3 release this new release is again almost fully backwards-compatible
for application code. Your existing configuration classes and files and your existing container initialization markup or code
is supposed to continue to work with version 2.4. #par

#par A few minor changes may have an effect on existing applications: #par

#lst
#lse The #cdi [Autoremove] #cdi metadata is now only supported when using view autowiring. When using
#cdi <Configure> #cdi or #cdi <FastInject> #cdi there is now an #cdi autoremove #cdi property on these tags.
This change was necessary to avoid the expensive reflection on the view, which otherwise only occurs in some
of the use cases supported by the #cdi <Configure> #cdi tag and never when using #cdi <FastInject> #cdi. #lse

#lse The view wiring mechanism is now more strict than in previous versions and reports errors like attempts
to wire a view that is already wired. When you run into messages like "view 'xyz' is already managed" have a look
at the chapter #ref view_intro #ref for the options available today. In many cases these errors are caused by
manually dispatching "configureView" events which should be avoided in Flex applications anyway. #lse
#lst 

#par Even for extensions the chance is pretty high that they continue to work without modifications. In particular
the APIs for creating custom configuration tags have now stabilized and do not change at all in version 2.4. #par

#par The only exception is if you wrote a replacement or decorator for one of the seven IOC kernel services.
One of the seven services has been replaced (#cdi CompositeContextBuilder #cdi became #cdi BootstrapManager #cdi)
and also the central hook for registering a replacement has been changed (#cdi GlobalFactoryRegistry #cdi became
#cdi BootstrapDefaults #cdi). These are not arbitrary changes though, they were needed for a general cleanup and
also some simplifications around these features. #par